{
  "CheckResourceLoader": {
    "scanUrls": [
      "org.openstreetmap.atlas.checks.validation"
    ],
    "type": "org.openstreetmap.atlas.checks.base.BaseCheck",
    "enabled.value.default": true
  },
  "PoolSizeCheck": {
    "surface": {
      "maximum": 1000.0,
      "minimum": 50.0
    }
  },
  "OrphanNodeCheck": {

  },
  "AddressPointMatchCheck": {
    "bounds.size": 150.0,
    "challenge": {
      "description": "Tasks contain nodes which either have no street name or incorrect street names",
      "blurb": "Nodes without street names, or with incorrect street names",
      "instruction": "Open your favorite editor and edit the node street names",
      "difficulty": "EASY",
      "defaultPriority": "LOW"
    }
  },
  "AreasWithHighwayTagCheck":{
    "tag.filters":"highway->!pedestrian&area->!yes",
    "challenge":{
      "description":"A Highway should never be tagged as an area, all these tasks involve highways that have been.",
      "blurb":"Highways should not be tagged as Areas.",
      "instruction":"Remove highway tag from feature with area tag.",
      "difficulty":"EASY",
      "tags":"highway,landuse"
    }
  },
  "BuildingRoadIntersectionCheck": {
    "challenge": {
      "description": "Tasks contain buildings which intersect with surrounding roads",
      "blurb": "Intersecting Buildings and Roads",
      "instruction": "Open your favorite editor and edit the buildings or roads to remove the intersection.",
      "difficulty": "EASY",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"building,highway"
    }
  },
  "ConflictingAreaTagCombination": {
    "challenge": {
      "description": "Task contains Area's with mutually exclusive tag combinations.",
      "blurb": "Conflicting Area Tag Combination",
      "instruction": "Open your favorite editor, check the instruction and modify the tags that are considered conflicting",
      "difficulty": "EASY"
    }
  },
  "DuplicateNodeCheck": {
    "challenge": {
      "description": "Tasks contain node locations that have duplicate nodes found.",
      "blurb": "Duplicate Nodes",
      "instruction": "Open your favorite editor and remove one or more of the duplicate nodes until only one remains.",
      "difficulty": "EASY"
    }
  },
   "DuplicatePointCheck": {
     "challenge": {
       "description": "Tasks contain node locations where duplicate points of interest are found.",
       "blurb": "Duplicate Points",
       "instruction": "Open your favorite editor and remove one or more of the duplicate points of interest until only one remains.",
       "difficulty": "EASY"
     }
   },
  "DuplicateWaysCheck": {
    "challenge": {
      "description": "Tasks contain Ways which have been partially or completely duplicated.",
      "blurb": "Duplicate Ways",
      "instruction": "Open your favorite editor and remove the duplicated edges in the OSM way.",
      "difficulty": "EASY"
    }
  },
  "EdgeCrossingEdgeCheck": {
    "challenge": {
      "description": "Tasks contain ways that do not have shared nodes but cross each other.",
      "blurb": "Crossing Ways",
      "instruction": "Open your favorite editor and connect the ways at the point of intersection.",
      "difficulty": "EASY"
    }
  },
  "FloatingEdgeCheck": {
    "highway.minimum": "service",
    "length": {
      "maximum.kilometers": 100.0,
      "minimum.meters": 100.0
    },
    "challenge": {
      "description": "Tasks contain ways that are disconnected from the road network.",
      "blurb": "Connected Edges",
      "instruction": "Open your favorite editor and remove disconnected edges.",
      "difficulty": "EASY",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"highway"
    }
  },
  "IntersectingBuildingsCheck":
  {
    "intersection.lower.limit": 0.01,
    "challenge": {
      "description": "Buildings that intersect, contain, or overlap each other.",
      "blurb": "Intersecting Buildings",
      "instruction": "Correct intersecting buildings by moving them or dissolving one into another.",
      "difficulty": "NORMAL",
      "tags":"building"
    }
  },
  "InvalidAccessTagCheck":{
    "tags.filter":"public_transport->!yes&psv->!yes&bus->!yes&emergency->!yes&motor_vehicle->!no&vehicle->!no&motorcar->!no",
    "minimum.highway.type":"residential",
    "challenge": {
      "description": "Tasks containing invalid access tags",
      "blurb": "Invalid Access Tags",
      "instruction": "Correct the displayed invalid access=no tag.",
      "difficulty": "NORMAL",
      "tags":"access,highway"
    }
  },
  "InvalidLanesTagCheck": {
    "lanes.filter": "Lanes->1,1.5,2,3,4,5,6,7,8,9,10",
    "challenge":{
      "description":"Tasks contain invalid values for the lanes tag.",
      "blurb":"Invalid Lanes Tags",
      "instruction":"Change the lanes tag to have a valid and representative value.",
      "difficulty":"EASY",
      "tags":"lanes,highway"
    }
  },
  "InvalidTurnRestrictionCheck": {
    "challenge": {
      "description": "Tasks containing invalid turn restrictions",
      "blurb": "Invalid Turn Restrictions",
      "instruction": "Correct the displayed invalid turn restriction",
      "difficulty": "HARD",
      "tags":"highway"
    }
  },
  "MalformedRoundaboutCheck" : {
    "traffic.countries.left":["AIA", "ATG", "AUS", "BGD", "BHS", "BMU", "BRB", "BRN", "BTN", "BWA",
      "CCK", "COK", "CXR", "CYM", "CYP", "DMA", "FJI", "FLK", "GBR", "GGY", "GRD",
      "GUY", "HKG", "IDN", "IMN", "IND", "IRL", "JAM", "JEY", "JPN", "KEN", "KIR",
      "KNA", "LCA", "LKA", "LSO", "MAC", "MDV", "MLT", "MOZ", "MSR", "MUS", "MWI",
      "MYS", "NAM", "NFK", "NIU", "NPL", "NRU", "NZL", "PAK", "PCN", "PNG", "SGP",
      "SGS", "SHN", "SLB", "SUR", "SWZ", "SYC", "TCA", "THA", "TKL", "TLS", "TON",
      "TTO", "TUV", "TZA", "UGA", "VCT", "VGB", "VIR", "WSM", "ZAF", "ZMB", "ZWE"],
    "challenge": {
      "description": "Tasks contain roundabouts that are malformed.",
      "blurb": "Malformed roundabouts",
      "instruction": "Open your favorite editor and fix the roundabout's geometry.",
      "difficulty": "MEDIUM"
    }
  },
  "OneMemberRelationCheck": {
    "challenge": {
      "description": "Tasks containing relations with only one member.",
      "blurb": "One Member Relations",
      "instruction": "Correct the relation to add necessary members",
      "difficulty": "HARD"
    }
  },
  "OverlappingAOIPolygonCheck":{
    "aoi.tags.filters": ["amenity->FESTIVAL_GROUNDS", "amenity->GRAVE_YARD|landuse->CEMETERY",
      "boundary->NATIONAL_PARK,PROTECTED_AREA|leisure->NATURE_RESERVE,PARK",
      "historic->BATTLEFIELD", "landuse->FOREST|natural->WOOD",
      "landuse->RECREATION_GROUND|leisure->RECREATION_GROUND",
      "landuse->VILLAGE_GREEN|leisure->PARK", "leisure->GARDEN",
      "leisure->GOLF_COURSE|sport->GOLF", "leisure->PARK&name->*", "natural->BEACH",
      "tourism->ZOO"],
    "intersect.minimum.limit":0.01,
    "challenge": {
      "description": "Tasks containing overlapping AOI ways",
      "blurb": "Overlapping AOI Polygon",
      "instruction": "Correct the areas as necessary to not have overlapping ways representing the same AOI",
      "difficulty": "HARD"
    }
  },
  "RoundaboutClosedLoopCheck": {
    "challenge": {
      "description": "A roundabout should be formed by one-way edges with no dead-end nodes.",
      "blurb": "Modify roundabouts such that they are well formed.",
      "instruction": "Open your favorite editor and fix the issue with the roundabout.",
      "difficulty": "NORMAL",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"highway"
    }
  },
  "RoundaboutValenceCheck": {
    "connections.minimum": 2.0,
    "connections.maximum": 14.0,
    "challenge": {
      "description": "Verify that the valence of the roundabout is sensible.",
      "blurb": "Modify Polyline intersections with the roundabout edges",
      "instruction": "Open your favorite editor and move modify polyline intersections with the roundabout.",
      "difficulty": "NORMAL"
    }
  },
  "SelfIntersectingPolylineCheck": {
    "tags.filter":"highway->*&highway->!construction&highway->!footway&highway->!path|building->*",
    "challenge": {
      "description": "Verify that the same Polyline does not intersect itself at any point.",
      "blurb": "Modify Polylines such that they do not self intersect.",
      "instruction": "Open your favorite editor and move the polylines such that they are not self intersecting anymore.",
      "difficulty": "NORMAL",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"highway"
    }
  },
  "SharpAngleCheck": {
    "threshold.degrees": 97.0,
    "challenge": {
      "description": "Each task has edges that have an angle that is too sharp within their polyline. Sharp angles may indicate inaccurate digitization once this threshold is exceeded. There may be other factors in play here such as number of intersections, type of highway, etc. But the main breaking point is any angles that are less than 31.",
      "blurb": "Modify angles that are too acute for possible inaccurate digitization.",
      "instruction": "Modify angles between two edges in polylines that are less than 31.",
      "difficulty": "NORMAL",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"highway"
    }
  },
  "SinkIslandCheck": {
    "tree.size": 50,
    "challenge": {
      "description": "Tasks that identify islands of roads where it is impossible to get out. The simplest is a one-way that dead-ends; that would be a one-edge island.",
      "blurb": "Identify islands of roads.",
      "instruction": "Open your favorite editor and apply tags (if need to change one way roads), or update roads to remove any islands of roads",
      "difficulty": "EASY",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"highway"
    }
  },
  "StreetNameIntegersOnlyCheck": {
    "name.keys.filter":["name","name:left","name:right"],
    "challenge": {
      "description": "Tasks containing name tags with only integers",
      "blurb": "Street Names Integers Only",
      "instruction": "Correct the road with only integers for names.",
      "difficulty": "Medium",
      "tags":"highway,name"
    }
  },
  "SnakeRoadCheck": {
    "challenge": {
      "description": "Tasks will include ways that are drawn as a single way, when in reality they should be two or more distinct ways",
      "blurb": "Snake Roads",
      "instruction": "Open your favorite editor and split the snake road into two or more distinct ways. You can do this by splitting or separating the existing way at an intersection or where you think a road should end. This check also flags roundabouts that aren’t properly tagged. If you see that’s the case - add a junction=roundabout tag when needed.",
      "difficulty": "MEDIUM",
      "defaultPriority": "LOW",
      "highPriorityRule": {
        "condition":"OR",
        "rules":["highway=motorway","highway=motorway_link","highway=trunk","highway=trunk_link"]
      },
      "mediumPriorityRule": {
        "condition":"OR",
        "rules":["highway=primary","highway=primary_link","highway=secondary","highway=secondary_link"]
      },
      "tags":"highway"
    }
  },
  "SignPostCheck": {
    "linkLength": {
      "minimum.meters": 50.0
    },
    "ramp":
    {
      "max.edges":10,
      "filter":"highway->motorway_link,trunk_link"
    },
    "source.filter":"highway->motorway,trunk",
    "destination_tag.filter":"destination->*|destination:ref->*|destination:street->*",
    "arterial.minimum":"RESIDENTIAL",
    "challenge": {
      "description": "Tasks contain nodes where sign post tagging could be missing.  In particular it looks for motorway and trunk ways which have a link edge exiting them.  A task is generated if either the connecting node is missing the motorway_junction tag or the exiting segment is missing the destination tag.",
      "blurb": "Missing sign post tags",
      "instruction": "Either add the missing motorway_junction tag to the identified node and / or the destination tag to the exiting link segment.",
      "difficulty": "NORMAL",
      "defaultPriority": "MEDIUM",
      "tags":"highway"
    }
  },
  "WaterbodyAndIslandSizeCheck": {
    "surface":{
      "waterbody.minimum.meters": 10.0,
      "waterbody.maximum.kilometers": 370000.0,
      "island.minimum.meters": 10.0,
      "island.maximum.kilometers": 2170000.0,
      "islet.minimum.meters": 10.0,
      "islet.maximum.kilometers": 1.0
    },
    "challenge": {
      "description": "This tasks contains waterboadies and islands which are either too small or too large in size.",
      "blurb": "Waterbodies and Islands that are too large, or too small",
      "instruction": "Open your favorite editor and examine if the waterbody or island is correctly tagged and mapped.",
      "difficulty": "NORMAL",
      "defaultPriority": "MEDIUM"
    }
  }
}
